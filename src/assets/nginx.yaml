files:
    "/etc/nginx/conf.d/proxy.conf" :
        mode: "000644"
        owner: root
        group: users
        content: |
          proxy_buffer_size 128k;
          proxy_buffers 4 256k;
          proxy_busy_buffers_size 256k;

          upstream nodejs {
            server 127.0.0.1:8081;
            keepalive 256;
          }

          upstream healthcheck {
            server 127.0.0.1:8039;
            server 127.0.0.1:8049 backup;
            keepalive 256;
          }

          server {
            listen 8080;
            server_tokens off;

            # for the DNS-resolver the AWS-default DNS-server is used, which always has the IP-address x.x.x.2
            <% if(dnsServers) { %>
            resolver <%= dnsServers %> valid=300s;
            <% } %>
            resolver_timeout 5s;

            if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})T(\d{2})") {
              set $year $1;
              set $month $2;
              set $day $3;
              set $hour $4;
            }

            access_log /var/log/nginx/healthd/application.log.$year-$month-$day-$hour healthd;
            access_log /var/log/nginx/access.log main;

            <% if(forceSSL) { %>
            if ($http_x_forwarded_proto = "http") {
              return 301 https://$host$request_uri;
            }
            <% } %>

            location ~* \.(eot|ttf|woff)$ {
              root /var/app/current/programs/web.browser/app;
              access_log off;
              add_header Access-Control-Allow-Origin *;
              add_header Vary Origin;
              add_header Pragma public;
              add_header Cache-Control "public";
              expires max;
            }

            location / {
              proxy_pass http://nodejs;
              proxy_set_header Connection "";
              proxy_http_version 1.1;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection "upgrade";

              <% if(forceSSL) { %>
              # secure settings used from https://cipherli.st
              add_header Strict-Transport-Security "<%- httpHeaders.strictTransportSecurity %>";
              add_header X-Frame-Options <%- httpHeaders.xFrameOptions %>;
              add_header X-Content-Type-Options <%= httpHeaders.xContentTypeOptions %>;
              add_header X-XSS-Protection "<%- httpHeaders.xXssProtection %>";
              add_header X-Robots-Tag <%= httpHeaders.xRobotsTag %>;
              add_header Content-Security-Policy "<%- httpHeaders.contentSecurityPolicy %>";
              <% } %>
            }

            location /aws-health-check-3984729847289743128904723 {
              proxy_pass http://healthcheck;
              proxy_set_header Connection "";
              proxy_http_version 1.1;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection "upgrade";
            }
    
            gzip on;
            gzip_comp_level 4;
            gzip_types text/html text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
          }

container_commands:
  create_healthd_folder:
    command: "mkdir -p /var/log/nginx/healthd/"
  removeconfig:
    command: "rm -f /tmp/deployment/config/#etc#nginx#conf.d#00_elastic_beanstalk_proxy.conf /etc/nginx/conf.d/00_elastic_beanstalk_proxy.conf"
